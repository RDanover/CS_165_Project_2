
try_me:     file format elf32-i386


Disassembly of section .init:

080483f4 <_init>:
 80483f4:	f3 0f 1e fb          	endbr32 
 80483f8:	53                   	push   %ebx
 80483f9:	83 ec 08             	sub    $0x8,%esp
 80483fc:	e8 0f 01 00 00       	call   8048510 <__x86.get_pc_thunk.bx>
 8048401:	81 c3 ff 1b 00 00    	add    $0x1bff,%ebx
 8048407:	8b 83 f8 ff ff ff    	mov    -0x8(%ebx),%eax
 804840d:	85 c0                	test   %eax,%eax
 804840f:	74 02                	je     8048413 <_init+0x1f>
 8048411:	ff d0                	call   *%eax
 8048413:	83 c4 08             	add    $0x8,%esp
 8048416:	5b                   	pop    %ebx
 8048417:	c3                   	ret    

Disassembly of section .plt:

08048420 <.plt>:
 8048420:	ff 35 04 a0 04 08    	pushl  0x804a004
 8048426:	ff 25 08 a0 04 08    	jmp    *0x804a008
 804842c:	00 00                	add    %al,(%eax)
	...

08048430 <printf@plt>:
 8048430:	ff 25 0c a0 04 08    	jmp    *0x804a00c
 8048436:	68 00 00 00 00       	push   $0x0
 804843b:	e9 e0 ff ff ff       	jmp    8048420 <.plt>

08048440 <getuid@plt>:
 8048440:	ff 25 10 a0 04 08    	jmp    *0x804a010
 8048446:	68 08 00 00 00       	push   $0x8
 804844b:	e9 d0 ff ff ff       	jmp    8048420 <.plt>

08048450 <strcpy@plt>:
 8048450:	ff 25 14 a0 04 08    	jmp    *0x804a014
 8048456:	68 10 00 00 00       	push   $0x10
 804845b:	e9 c0 ff ff ff       	jmp    8048420 <.plt>

08048460 <system@plt>:
 8048460:	ff 25 18 a0 04 08    	jmp    *0x804a018
 8048466:	68 18 00 00 00       	push   $0x18
 804846b:	e9 b0 ff ff ff       	jmp    8048420 <.plt>

08048470 <exit@plt>:
 8048470:	ff 25 1c a0 04 08    	jmp    *0x804a01c
 8048476:	68 20 00 00 00       	push   $0x20
 804847b:	e9 a0 ff ff ff       	jmp    8048420 <.plt>

08048480 <__libc_start_main@plt>:
 8048480:	ff 25 20 a0 04 08    	jmp    *0x804a020
 8048486:	68 28 00 00 00       	push   $0x28
 804848b:	e9 90 ff ff ff       	jmp    8048420 <.plt>

08048490 <creat@plt>:
 8048490:	ff 25 24 a0 04 08    	jmp    *0x804a024
 8048496:	68 30 00 00 00       	push   $0x30
 804849b:	e9 80 ff ff ff       	jmp    8048420 <.plt>

080484a0 <sprintf@plt>:
 80484a0:	ff 25 28 a0 04 08    	jmp    *0x804a028
 80484a6:	68 38 00 00 00       	push   $0x38
 80484ab:	e9 70 ff ff ff       	jmp    8048420 <.plt>

080484b0 <close@plt>:
 80484b0:	ff 25 2c a0 04 08    	jmp    *0x804a02c
 80484b6:	68 40 00 00 00       	push   $0x40
 80484bb:	e9 60 ff ff ff       	jmp    8048420 <.plt>

Disassembly of section .text:

080484c0 <_start>:
 80484c0:	f3 0f 1e fb          	endbr32 
 80484c4:	31 ed                	xor    %ebp,%ebp
 80484c6:	5e                   	pop    %esi
 80484c7:	89 e1                	mov    %esp,%ecx
 80484c9:	83 e4 f0             	and    $0xfffffff0,%esp
 80484cc:	50                   	push   %eax
 80484cd:	54                   	push   %esp
 80484ce:	52                   	push   %edx
 80484cf:	e8 23 00 00 00       	call   80484f7 <_start+0x37>
 80484d4:	81 c3 2c 1b 00 00    	add    $0x1b2c,%ebx
 80484da:	8d 83 80 e8 ff ff    	lea    -0x1780(%ebx),%eax
 80484e0:	50                   	push   %eax
 80484e1:	8d 83 20 e8 ff ff    	lea    -0x17e0(%ebx),%eax
 80484e7:	50                   	push   %eax
 80484e8:	51                   	push   %ecx
 80484e9:	56                   	push   %esi
 80484ea:	c7 c0 4e 87 04 08    	mov    $0x804874e,%eax
 80484f0:	50                   	push   %eax
 80484f1:	e8 8a ff ff ff       	call   8048480 <__libc_start_main@plt>
 80484f6:	f4                   	hlt    
 80484f7:	8b 1c 24             	mov    (%esp),%ebx
 80484fa:	c3                   	ret    

080484fb <.annobin_init.c>:
 80484fb:	66 90                	xchg   %ax,%ax
 80484fd:	66 90                	xchg   %ax,%ax
 80484ff:	90                   	nop

08048500 <_dl_relocate_static_pie>:
 8048500:	f3 0f 1e fb          	endbr32 
 8048504:	c3                   	ret    

08048505 <.annobin__dl_relocate_static_pie.end>:
 8048505:	66 90                	xchg   %ax,%ax
 8048507:	66 90                	xchg   %ax,%ax
 8048509:	66 90                	xchg   %ax,%ax
 804850b:	66 90                	xchg   %ax,%ax
 804850d:	66 90                	xchg   %ax,%ax
 804850f:	90                   	nop

08048510 <__x86.get_pc_thunk.bx>:
 8048510:	8b 1c 24             	mov    (%esp),%ebx
 8048513:	c3                   	ret    
 8048514:	66 90                	xchg   %ax,%ax
 8048516:	66 90                	xchg   %ax,%ax
 8048518:	66 90                	xchg   %ax,%ax
 804851a:	66 90                	xchg   %ax,%ax
 804851c:	66 90                	xchg   %ax,%ax
 804851e:	66 90                	xchg   %ax,%ax

08048520 <deregister_tm_clones>:
 8048520:	e8 d4 00 00 00       	call   80485f9 <__x86.get_pc_thunk.dx>
 8048525:	81 c2 db 1a 00 00    	add    $0x1adb,%edx
 804852b:	8d 8a 34 00 00 00    	lea    0x34(%edx),%ecx
 8048531:	8d 82 34 00 00 00    	lea    0x34(%edx),%eax
 8048537:	39 c8                	cmp    %ecx,%eax
 8048539:	74 1d                	je     8048558 <deregister_tm_clones+0x38>
 804853b:	8b 82 f4 ff ff ff    	mov    -0xc(%edx),%eax
 8048541:	85 c0                	test   %eax,%eax
 8048543:	74 13                	je     8048558 <deregister_tm_clones+0x38>
 8048545:	55                   	push   %ebp
 8048546:	89 e5                	mov    %esp,%ebp
 8048548:	83 ec 14             	sub    $0x14,%esp
 804854b:	51                   	push   %ecx
 804854c:	ff d0                	call   *%eax
 804854e:	83 c4 10             	add    $0x10,%esp
 8048551:	c9                   	leave  
 8048552:	c3                   	ret    
 8048553:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048557:	90                   	nop
 8048558:	c3                   	ret    
 8048559:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi

08048560 <register_tm_clones>:
 8048560:	e8 94 00 00 00       	call   80485f9 <__x86.get_pc_thunk.dx>
 8048565:	81 c2 9b 1a 00 00    	add    $0x1a9b,%edx
 804856b:	55                   	push   %ebp
 804856c:	89 e5                	mov    %esp,%ebp
 804856e:	53                   	push   %ebx
 804856f:	8d 8a 34 00 00 00    	lea    0x34(%edx),%ecx
 8048575:	8d 82 34 00 00 00    	lea    0x34(%edx),%eax
 804857b:	83 ec 04             	sub    $0x4,%esp
 804857e:	29 c8                	sub    %ecx,%eax
 8048580:	c1 f8 02             	sar    $0x2,%eax
 8048583:	89 c3                	mov    %eax,%ebx
 8048585:	c1 eb 1f             	shr    $0x1f,%ebx
 8048588:	01 d8                	add    %ebx,%eax
 804858a:	d1 f8                	sar    %eax
 804858c:	74 14                	je     80485a2 <register_tm_clones+0x42>
 804858e:	8b 92 fc ff ff ff    	mov    -0x4(%edx),%edx
 8048594:	85 d2                	test   %edx,%edx
 8048596:	74 0a                	je     80485a2 <register_tm_clones+0x42>
 8048598:	83 ec 08             	sub    $0x8,%esp
 804859b:	50                   	push   %eax
 804859c:	51                   	push   %ecx
 804859d:	ff d2                	call   *%edx
 804859f:	83 c4 10             	add    $0x10,%esp
 80485a2:	8b 5d fc             	mov    -0x4(%ebp),%ebx
 80485a5:	c9                   	leave  
 80485a6:	c3                   	ret    
 80485a7:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80485ae:	66 90                	xchg   %ax,%ax

080485b0 <__do_global_dtors_aux>:
 80485b0:	f3 0f 1e fb          	endbr32 
 80485b4:	55                   	push   %ebp
 80485b5:	89 e5                	mov    %esp,%ebp
 80485b7:	53                   	push   %ebx
 80485b8:	e8 53 ff ff ff       	call   8048510 <__x86.get_pc_thunk.bx>
 80485bd:	81 c3 43 1a 00 00    	add    $0x1a43,%ebx
 80485c3:	83 ec 04             	sub    $0x4,%esp
 80485c6:	80 bb 40 00 00 00 00 	cmpb   $0x0,0x40(%ebx)
 80485cd:	75 0c                	jne    80485db <__do_global_dtors_aux+0x2b>
 80485cf:	e8 4c ff ff ff       	call   8048520 <deregister_tm_clones>
 80485d4:	c6 83 40 00 00 00 01 	movb   $0x1,0x40(%ebx)
 80485db:	83 c4 04             	add    $0x4,%esp
 80485de:	5b                   	pop    %ebx
 80485df:	5d                   	pop    %ebp
 80485e0:	c3                   	ret    
 80485e1:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80485e8:	8d b4 26 00 00 00 00 	lea    0x0(%esi,%eiz,1),%esi
 80485ef:	90                   	nop

080485f0 <frame_dummy>:
 80485f0:	f3 0f 1e fb          	endbr32 
 80485f4:	e9 67 ff ff ff       	jmp    8048560 <register_tm_clones>

080485f9 <__x86.get_pc_thunk.dx>:
 80485f9:	8b 14 24             	mov    (%esp),%edx
 80485fc:	c3                   	ret    

080485fd <test>:
 80485fd:	55                   	push   %ebp
 80485fe:	89 e5                	mov    %esp,%ebp
 8048600:	83 ec 58             	sub    $0x58,%esp
 8048603:	c7 45 d2 74 65 73 74 	movl   $0x74736574,-0x2e(%ebp)
 804860a:	c7 45 d6 5f 74 68 69 	movl   $0x6968745f,-0x2a(%ebp)
 8048611:	c7 45 da 73 5f 6f 66 	movl   $0x666f5f73,-0x26(%ebp)
 8048618:	c7 45 de 66 73 65 74 	movl   $0x74657366,-0x22(%ebp)
 804861f:	c7 45 e2 5f 69 6d 70 	movl   $0x706d695f,-0x1e(%ebp)
 8048626:	c7 45 e6 61 63 74 5f 	movl   $0x5f746361,-0x1a(%ebp)
 804862d:	c7 45 ea 6c 6f 6e 67 	movl   $0x676e6f6c,-0x16(%ebp)
 8048634:	c7 45 ee 65 72 5f 6c 	movl   $0x6c5f7265,-0x12(%ebp)
 804863b:	c7 45 f2 6f 6e 67 65 	movl   $0x65676e6f,-0xe(%ebp)
 8048642:	66 c7 45 f6 72 00    	movw   $0x72,-0xa(%ebp)
 8048648:	c7 45 c8 67 67 34 6f 	movl   $0x6f346767,-0x38(%ebp)
 804864f:	c7 45 cc 6b 39 64 66 	movl   $0x6664396b,-0x34(%ebp)
 8048656:	66 c7 45 d0 6d 00    	movw   $0x6d,-0x30(%ebp)
 804865c:	c7 45 b7 61 62 63 00 	movl   $0x636261,-0x49(%ebp)
 8048663:	c7 45 bb 00 00 00 00 	movl   $0x0,-0x45(%ebp)
 804866a:	c7 45 bf 00 00 00 00 	movl   $0x0,-0x41(%ebp)
 8048671:	c7 45 c3 00 00 00 00 	movl   $0x0,-0x3d(%ebp)
 8048678:	c6 45 c7 00          	movb   $0x0,-0x39(%ebp)
 804867c:	83 ec 08             	sub    $0x8,%esp
 804867f:	ff 75 08             	pushl  0x8(%ebp)
 8048682:	8d 45 b7             	lea    -0x49(%ebp),%eax
 8048685:	50                   	push   %eax
 8048686:	e8 c5 fd ff ff       	call   8048450 <strcpy@plt>
 804868b:	83 c4 10             	add    $0x10,%esp
 804868e:	83 ec 08             	sub    $0x8,%esp
 8048691:	8d 45 b7             	lea    -0x49(%ebp),%eax
 8048694:	50                   	push   %eax
 8048695:	68 ac 88 04 08       	push   $0x80488ac
 804869a:	e8 91 fd ff ff       	call   8048430 <printf@plt>
 804869f:	83 c4 10             	add    $0x10,%esp
 80486a2:	90                   	nop
 80486a3:	c9                   	leave  
 80486a4:	c3                   	ret    

080486a5 <log_result>:
 80486a5:	55                   	push   %ebp
 80486a6:	89 e5                	mov    %esp,%ebp
 80486a8:	83 ec 18             	sub    $0x18,%esp
 80486ab:	83 ec 08             	sub    $0x8,%esp
 80486ae:	68 a4 01 00 00       	push   $0x1a4
 80486b3:	68 60 a0 04 08       	push   $0x804a060
 80486b8:	e8 d3 fd ff ff       	call   8048490 <creat@plt>
 80486bd:	83 c4 10             	add    $0x10,%esp
 80486c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80486c3:	83 ec 0c             	sub    $0xc,%esp
 80486c6:	68 c0 88 04 08       	push   $0x80488c0
 80486cb:	e8 60 fd ff ff       	call   8048430 <printf@plt>
 80486d0:	83 c4 10             	add    $0x10,%esp
 80486d3:	83 ec 0c             	sub    $0xc,%esp
 80486d6:	ff 75 f4             	pushl  -0xc(%ebp)
 80486d9:	e8 d2 fd ff ff       	call   80484b0 <close@plt>
 80486de:	83 c4 10             	add    $0x10,%esp
 80486e1:	90                   	nop
 80486e2:	c9                   	leave  
 80486e3:	c3                   	ret    

080486e4 <log_result_advanced>:
 80486e4:	55                   	push   %ebp
 80486e5:	89 e5                	mov    %esp,%ebp
 80486e7:	83 ec 78             	sub    $0x78,%esp
 80486ea:	81 7d 08 de ad be ef 	cmpl   $0xefbeadde,0x8(%ebp)
 80486f1:	75 58                	jne    804874b <log_result_advanced+0x67>
 80486f3:	e8 48 fd ff ff       	call   8048440 <getuid@plt>
 80486f8:	89 45 f4             	mov    %eax,-0xc(%ebp)
 80486fb:	83 ec 04             	sub    $0x4,%esp
 80486fe:	ff 75 f4             	pushl  -0xc(%ebp)
 8048701:	68 d3 88 04 08       	push   $0x80488d3
 8048706:	8d 45 8c             	lea    -0x74(%ebp),%eax
 8048709:	50                   	push   %eax
 804870a:	e8 91 fd ff ff       	call   80484a0 <sprintf@plt>
 804870f:	83 c4 10             	add    $0x10,%esp
 8048712:	83 ec 08             	sub    $0x8,%esp
 8048715:	8d 45 8c             	lea    -0x74(%ebp),%eax
 8048718:	50                   	push   %eax
 8048719:	68 e9 88 04 08       	push   $0x80488e9
 804871e:	e8 0d fd ff ff       	call   8048430 <printf@plt>
 8048723:	83 c4 10             	add    $0x10,%esp
 8048726:	83 ec 08             	sub    $0x8,%esp
 8048729:	68 a4 01 00 00       	push   $0x1a4
 804872e:	8d 45 8c             	lea    -0x74(%ebp),%eax
 8048731:	50                   	push   %eax
 8048732:	e8 59 fd ff ff       	call   8048490 <creat@plt>
 8048737:	83 c4 10             	add    $0x10,%esp
 804873a:	89 45 f0             	mov    %eax,-0x10(%ebp)
 804873d:	83 ec 0c             	sub    $0xc,%esp
 8048740:	ff 75 f0             	pushl  -0x10(%ebp)
 8048743:	e8 68 fd ff ff       	call   80484b0 <close@plt>
 8048748:	83 c4 10             	add    $0x10,%esp
 804874b:	90                   	nop
 804874c:	c9                   	leave  
 804874d:	c3                   	ret    

0804874e <main>:
 804874e:	8d 4c 24 04          	lea    0x4(%esp),%ecx
 8048752:	83 e4 f0             	and    $0xfffffff0,%esp
 8048755:	ff 71 fc             	pushl  -0x4(%ecx)
 8048758:	55                   	push   %ebp
 8048759:	89 e5                	mov    %esp,%ebp
 804875b:	53                   	push   %ebx
 804875c:	51                   	push   %ecx
 804875d:	83 ec 10             	sub    $0x10,%esp
 8048760:	89 cb                	mov    %ecx,%ebx
 8048762:	83 3b 01             	cmpl   $0x1,(%ebx)
 8048765:	7e 4b                	jle    80487b2 <main+0x64>
 8048767:	e8 d4 fc ff ff       	call   8048440 <getuid@plt>
 804876c:	89 45 f4             	mov    %eax,-0xc(%ebp)
 804876f:	83 ec 04             	sub    $0x4,%esp
 8048772:	ff 75 f4             	pushl  -0xc(%ebp)
 8048775:	68 f8 88 04 08       	push   $0x80488f8
 804877a:	68 60 a0 04 08       	push   $0x804a060
 804877f:	e8 1c fd ff ff       	call   80484a0 <sprintf@plt>
 8048784:	83 c4 10             	add    $0x10,%esp
 8048787:	83 ec 08             	sub    $0x8,%esp
 804878a:	68 60 a0 04 08       	push   $0x804a060
 804878f:	68 e9 88 04 08       	push   $0x80488e9
 8048794:	e8 97 fc ff ff       	call   8048430 <printf@plt>
 8048799:	83 c4 10             	add    $0x10,%esp
 804879c:	8b 43 04             	mov    0x4(%ebx),%eax
 804879f:	83 c0 04             	add    $0x4,%eax
 80487a2:	8b 00                	mov    (%eax),%eax
 80487a4:	83 ec 0c             	sub    $0xc,%esp
 80487a7:	50                   	push   %eax
 80487a8:	e8 50 fe ff ff       	call   80485fd <test>
 80487ad:	83 c4 10             	add    $0x10,%esp
 80487b0:	eb 10                	jmp    80487c2 <main+0x74>
 80487b2:	83 ec 0c             	sub    $0xc,%esp
 80487b5:	68 08 89 04 08       	push   $0x8048908
 80487ba:	e8 71 fc ff ff       	call   8048430 <printf@plt>
 80487bf:	83 c4 10             	add    $0x10,%esp
 80487c2:	83 ec 0c             	sub    $0xc,%esp
 80487c5:	6a 00                	push   $0x0
 80487c7:	e8 a4 fc ff ff       	call   8048470 <exit@plt>

080487cc <function_pointer_function>:
 80487cc:	55                   	push   %ebp
 80487cd:	89 e5                	mov    %esp,%ebp
 80487cf:	83 ec 08             	sub    $0x8,%esp
 80487d2:	83 ec 08             	sub    $0x8,%esp
 80487d5:	68 2c 89 04 08       	push   $0x804892c
 80487da:	68 54 89 04 08       	push   $0x8048954
 80487df:	e8 4c fc ff ff       	call   8048430 <printf@plt>
 80487e4:	83 c4 10             	add    $0x10,%esp
 80487e7:	8b 45 08             	mov    0x8(%ebp),%eax
 80487ea:	ff d0                	call   *%eax
 80487ec:	90                   	nop
 80487ed:	c9                   	leave  
 80487ee:	c3                   	ret    

080487ef <shell_function>:
 80487ef:	55                   	push   %ebp
 80487f0:	89 e5                	mov    %esp,%ebp
 80487f2:	83 ec 08             	sub    $0x8,%esp
 80487f5:	83 ec 08             	sub    $0x8,%esp
 80487f8:	68 75 89 04 08       	push   $0x8048975
 80487fd:	68 7f 89 04 08       	push   $0x804897f
 8048802:	e8 29 fc ff ff       	call   8048430 <printf@plt>
 8048807:	83 c4 10             	add    $0x10,%esp
 804880a:	83 ec 0c             	sub    $0xc,%esp
 804880d:	68 95 89 04 08       	push   $0x8048995
 8048812:	e8 49 fc ff ff       	call   8048460 <system@plt>
 8048817:	83 c4 10             	add    $0x10,%esp
 804881a:	90                   	nop
 804881b:	c9                   	leave  
 804881c:	c3                   	ret    
 804881d:	66 90                	xchg   %ax,%ax
 804881f:	90                   	nop

08048820 <__libc_csu_init>:
 8048820:	f3 0f 1e fb          	endbr32 
 8048824:	55                   	push   %ebp
 8048825:	57                   	push   %edi
 8048826:	56                   	push   %esi
 8048827:	53                   	push   %ebx
 8048828:	e8 e3 fc ff ff       	call   8048510 <__x86.get_pc_thunk.bx>
 804882d:	81 c3 d3 17 00 00    	add    $0x17d3,%ebx
 8048833:	83 ec 0c             	sub    $0xc,%esp
 8048836:	8b 6c 24 28          	mov    0x28(%esp),%ebp
 804883a:	e8 b5 fb ff ff       	call   80483f4 <_init>
 804883f:	8d b3 08 ff ff ff    	lea    -0xf8(%ebx),%esi
 8048845:	8d 83 04 ff ff ff    	lea    -0xfc(%ebx),%eax
 804884b:	29 c6                	sub    %eax,%esi
 804884d:	c1 fe 02             	sar    $0x2,%esi
 8048850:	74 23                	je     8048875 <__libc_csu_init+0x55>
 8048852:	31 ff                	xor    %edi,%edi
 8048854:	8d 74 26 00          	lea    0x0(%esi,%eiz,1),%esi
 8048858:	83 ec 04             	sub    $0x4,%esp
 804885b:	55                   	push   %ebp
 804885c:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048860:	ff 74 24 2c          	pushl  0x2c(%esp)
 8048864:	ff 94 bb 04 ff ff ff 	call   *-0xfc(%ebx,%edi,4)
 804886b:	83 c7 01             	add    $0x1,%edi
 804886e:	83 c4 10             	add    $0x10,%esp
 8048871:	39 fe                	cmp    %edi,%esi
 8048873:	75 e3                	jne    8048858 <__libc_csu_init+0x38>
 8048875:	83 c4 0c             	add    $0xc,%esp
 8048878:	5b                   	pop    %ebx
 8048879:	5e                   	pop    %esi
 804887a:	5f                   	pop    %edi
 804887b:	5d                   	pop    %ebp
 804887c:	c3                   	ret    

0804887d <.annobin___libc_csu_fini.start>:
 804887d:	8d 76 00             	lea    0x0(%esi),%esi

08048880 <__libc_csu_fini>:
 8048880:	f3 0f 1e fb          	endbr32 
 8048884:	c3                   	ret    

Disassembly of section .fini:

08048888 <_fini>:
 8048888:	f3 0f 1e fb          	endbr32 
 804888c:	53                   	push   %ebx
 804888d:	83 ec 08             	sub    $0x8,%esp
 8048890:	e8 7b fc ff ff       	call   8048510 <__x86.get_pc_thunk.bx>
 8048895:	81 c3 6b 17 00 00    	add    $0x176b,%ebx
 804889b:	83 c4 08             	add    $0x8,%esp
 804889e:	5b                   	pop    %ebx
 804889f:	c3                   	ret    
